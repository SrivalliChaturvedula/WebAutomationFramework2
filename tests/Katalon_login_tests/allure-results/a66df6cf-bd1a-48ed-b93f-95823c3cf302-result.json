{"name": "Appointment Confirmation", "status": "broken", "statusDetails": {"message": "AttributeError: 'tuple' object has no attribute 'tag_name'", "trace": "setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"157be36bad761b873e1f23bc0ea2c814\")>\n\n    @allure.title(\"Appointment Confirmation\")\n    @allure.description(\"Comment added while booking appointment is correctly added or not\")\n    @pytest.mark.positive\n    # def test_katalon_appointment_comment(setup):\n    # driver = setup\n    #\n    # homePage = HomePage(driver)\n    # homePage.make_appointment_click()\n    #\n    # WebDriverWait(driver, 20).until(EC.visibility_of_element_located((By.ID, \"txt-username\")))\n    #\n    # loginPage = LogInPage(driver)\n    #\n    # demo_username = loginPage.get_demo_username()\n    # demo_password = loginPage.get_demo_password()\n    #\n    # loginPage.login_katalon(username=demo_username, password=demo_password)\n    #\n    #\n    # # Check if the login button exists in the DOM\n    # login_button = driver.find_element(By.ID, \"btn-login\")\n    # print(f\"Login Button: {login_button.is_displayed()}\")  # Prints if the login button is visible\n    # print(f\"Login Button Text: {login_button.text}\")\n    # driver.execute_script(\"arguments[0].scrollIntoView(true);\", login_button)\n    # WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.ID, \"btn-login\"))).click()\n    # WebDriverWait(driver, 20).until(EC.title_contains(\"appointment\"))\n    # assert \"appointment\" in driver.title\n    #\n    # time.sleep(5)\n    def test_katalon_appointment_comment(setup):\n        driver = setup\n    \n        # Navigate to the home page and initiate appointment\n        homePage = HomePage(driver)\n        homePage.make_appointment_click()\n    \n        # Wait for the login form to be visible (wait for username input field)\n        WebDriverWait(driver, 20).until(EC.visibility_of_element_located((By.ID, \"txt-username\")))\n    \n        # Create an instance of the LoginPage\n        loginPage = LogInPage(driver)\n    \n        # Get the demo username and password dynamically\n        demo_username = loginPage.get_demo_username()\n        demo_password = loginPage.get_demo_password()\n    \n        # Perform login with the retrieved credentials\n        loginPage.login_katalon(username=demo_username, password=demo_password)\n    \n        time.sleep(10)\n    \n        appointmentPage = AppointmentPageClass(driver)\n        appointmentPage.select_facility(\"Seoul CURA Healthcare Center\")\n        time.sleep(5)\n    \n        dropdown_element = appointmentPage.dropdown\n>       dropdown = Select(dropdown_element)\n\ntest_appointment.py:80: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.select.Select object at 0x00000235A18073B0>\nwebelement = ('id', 'combo_facility')\n\n    def __init__(self, webelement: WebElement) -> None:\n        \"\"\"Constructor. A check is made that the given element is, indeed, a\n        SELECT tag. If it is not, then an UnexpectedTagNameException is thrown.\n    \n        :Args:\n         - webelement - SELECT element to wrap\n    \n        Example:\n            from selenium.webdriver.support.ui import Select \\n\n            Select(driver.find_element(By.TAG_NAME, \"select\")).select_by_index(2)\n        \"\"\"\n>       if webelement.tag_name.lower() != \"select\":\nE       AttributeError: 'tuple' object has no attribute 'tag_name'\n\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\select.py:38: AttributeError"}, "description": "Comment added while booking appointment is correctly added or not", "start": 1733381423925, "stop": 1733381441384, "uuid": "5fe0b184-c2f4-4c6d-9088-b30e4dd6d201", "historyId": "441158212635f8077ee99a261420eed4", "testCaseId": "441158212635f8077ee99a261420eed4", "fullName": "tests.Katalon_login_tests.test_appointment#test_katalon_appointment_comment", "labels": [{"name": "tag", "value": "positive"}, {"name": "parentSuite", "value": "tests.Katalon_login_tests"}, {"name": "suite", "value": "test_appointment"}, {"name": "host", "value": "JyotsnaSree"}, {"name": "thread", "value": "23588-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.Katalon_login_tests.test_appointment"}]}
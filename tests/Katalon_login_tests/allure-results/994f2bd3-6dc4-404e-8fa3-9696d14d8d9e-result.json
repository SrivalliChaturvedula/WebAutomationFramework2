{"name": "Appointment Confirmation", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[@id='btn-login']\"}\n  (Session info: chrome=131.0.6778.108); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF75B4C6CF5+28821]\n\t(No symbol) [0x00007FF75B433880]\n\t(No symbol) [0x00007FF75B2D578A]\n\t(No symbol) [0x00007FF75B3291BE]\n\t(No symbol) [0x00007FF75B3294AC]\n\t(No symbol) [0x00007FF75B372647]\n\t(No symbol) [0x00007FF75B34F33F]\n\t(No symbol) [0x00007FF75B36F412]\n\t(No symbol) [0x00007FF75B34F0A3]\n\t(No symbol) [0x00007FF75B31A778]\n\t(No symbol) [0x00007FF75B31B8E1]\n\tGetHandleVerifier [0x00007FF75B7FFCED+3408013]\n\tGetHandleVerifier [0x00007FF75B81745F+3504127]\n\tGetHandleVerifier [0x00007FF75B80B63D+3455453]\n\tGetHandleVerifier [0x00007FF75B58BDFB+835995]\n\t(No symbol) [0x00007FF75B43EB9F]\n\t(No symbol) [0x00007FF75B43A854]\n\t(No symbol) [0x00007FF75B43A9ED]\n\t(No symbol) [0x00007FF75B42A1D9]\n\tBaseThreadInitThunk [0x00007FFA8A50259D+29]\n\tRtlUserThreadStart [0x00007FFA8C3CAF38+40]", "trace": "setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4b9244f8805a2b85a0322562a2eb6e4f\")>\n\n    @allure.title(\"Appointment Confirmation\")\n    @allure.description(\"Comment added while booking appointment is correctly added or not\")\n    @pytest.mark.positive\n    def test_katalon_appointment_comment(setup):\n        driver = setup\n    \n        homePage = HomePage(driver)\n        homePage.make_appointment_click()\n        time.sleep(10)\n    \n        loginPage = LogInPage(driver)\n        time.sleep(5)\n        demo_username = loginPage.get_demo_username()\n        demo_password = loginPage.get_demo_password()\n    \n        loginPage.login_katalon(username=demo_username, password=demo_password)\n        time.sleep(5)\n>       loginPage.login_click()\n\ntest_appointment.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\page_objects\\login_page.py:59: in login_click\n    login_click = self.driver.find_element(*LogInPage.login)\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:770: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001F20EC22930>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF75B42A1D9]\\\\n\\\\tBaseThreadInitThunk [0x00007FFA8A50259D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFA8C3CAF38+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[@id='btn-login']\"}\nE         (Session info: chrome=131.0.6778.108); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF75B4C6CF5+28821]\nE       \t(No symbol) [0x00007FF75B433880]\nE       \t(No symbol) [0x00007FF75B2D578A]\nE       \t(No symbol) [0x00007FF75B3291BE]\nE       \t(No symbol) [0x00007FF75B3294AC]\nE       \t(No symbol) [0x00007FF75B372647]\nE       \t(No symbol) [0x00007FF75B34F33F]\nE       \t(No symbol) [0x00007FF75B36F412]\nE       \t(No symbol) [0x00007FF75B34F0A3]\nE       \t(No symbol) [0x00007FF75B31A778]\nE       \t(No symbol) [0x00007FF75B31B8E1]\nE       \tGetHandleVerifier [0x00007FF75B7FFCED+3408013]\nE       \tGetHandleVerifier [0x00007FF75B81745F+3504127]\nE       \tGetHandleVerifier [0x00007FF75B80B63D+3455453]\nE       \tGetHandleVerifier [0x00007FF75B58BDFB+835995]\nE       \t(No symbol) [0x00007FF75B43EB9F]\nE       \t(No symbol) [0x00007FF75B43A854]\nE       \t(No symbol) [0x00007FF75B43A9ED]\nE       \t(No symbol) [0x00007FF75B42A1D9]\nE       \tBaseThreadInitThunk [0x00007FFA8A50259D+29]\nE       \tRtlUserThreadStart [0x00007FFA8C3CAF38+40]\n\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException"}, "description": "Comment added while booking appointment is correctly added or not", "start": 1733300294996, "stop": 1733300317205, "uuid": "025167de-23f3-4c15-adb0-917b5e7d02a0", "historyId": "441158212635f8077ee99a261420eed4", "testCaseId": "441158212635f8077ee99a261420eed4", "fullName": "tests.Katalon_login_tests.test_appointment#test_katalon_appointment_comment", "labels": [{"name": "tag", "value": "positive"}, {"name": "parentSuite", "value": "tests.Katalon_login_tests"}, {"name": "suite", "value": "test_appointment"}, {"name": "host", "value": "JyotsnaSree"}, {"name": "thread", "value": "12380-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.Katalon_login_tests.test_appointment"}]}
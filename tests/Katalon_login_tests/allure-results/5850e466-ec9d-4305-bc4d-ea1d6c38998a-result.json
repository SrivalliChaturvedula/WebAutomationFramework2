{"name": "Appointment Confirmation", "status": "broken", "statusDetails": {"message": "AttributeError: 'tuple' object has no attribute 'value'", "trace": "setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6db1327657a37237e759036680f99197\")>\n\n    @allure.title(\"Appointment Confirmation\")\n    @allure.description(\"Comment added while booking appointment is correctly added or not\")\n    @pytest.mark.positive\n    # def test_katalon_appointment_comment(setup):\n    # driver = setup\n    #\n    # homePage = HomePage(driver)\n    # homePage.make_appointment_click()\n    #\n    # WebDriverWait(driver, 20).until(EC.visibility_of_element_located((By.ID, \"txt-username\")))\n    #\n    # loginPage = LogInPage(driver)\n    #\n    # demo_username = loginPage.get_demo_username()\n    # demo_password = loginPage.get_demo_password()\n    #\n    # loginPage.login_katalon(username=demo_username, password=demo_password)\n    #\n    #\n    # # Check if the login button exists in the DOM\n    # login_button = driver.find_element(By.ID, \"btn-login\")\n    # print(f\"Login Button: {login_button.is_displayed()}\")  # Prints if the login button is visible\n    # print(f\"Login Button Text: {login_button.text}\")\n    # driver.execute_script(\"arguments[0].scrollIntoView(true);\", login_button)\n    # WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.ID, \"btn-login\"))).click()\n    # WebDriverWait(driver, 20).until(EC.title_contains(\"appointment\"))\n    # assert \"appointment\" in driver.title\n    #\n    # time.sleep(5)\n    def test_katalon_appointment_comment(setup):\n        driver = setup\n    \n        # Navigate to the home page and initiate appointment\n        homePage = HomePage(driver)\n        homePage.make_appointment_click()\n    \n        # Wait for the login form to be visible (wait for username input field)\n        WebDriverWait(driver, 20).until(EC.visibility_of_element_located((By.ID, \"txt-username\")))\n    \n        # Create an instance of the LoginPage\n        loginPage = LogInPage(driver)\n    \n        # Get the demo username and password dynamically\n        demo_username = loginPage.get_demo_username()\n        demo_password = loginPage.get_demo_password()\n    \n        # Perform login with the retrieved credentials\n        loginPage.login_katalon(username=demo_username, password=demo_password)\n    \n        time.sleep(10)\n    \n        appointmentPage = AppointmentPageClass(driver)\n        appointmentPage.select_facility(\"Seoul CURA Healthcare Center\")\n>       assert appointmentPage.dropdown.__getattribute__(\"value\") == \"Seoul CURA Healthcare Center\"\nE       AttributeError: 'tuple' object has no attribute 'value'\n\ntest_appointment.py:76: AttributeError"}, "description": "Comment added while booking appointment is correctly added or not", "start": 1733380775666, "stop": 1733380788051, "uuid": "97215554-4d68-4208-b468-a1079ff219f8", "historyId": "441158212635f8077ee99a261420eed4", "testCaseId": "441158212635f8077ee99a261420eed4", "fullName": "tests.Katalon_login_tests.test_appointment#test_katalon_appointment_comment", "labels": [{"name": "tag", "value": "positive"}, {"name": "parentSuite", "value": "tests.Katalon_login_tests"}, {"name": "suite", "value": "test_appointment"}, {"name": "host", "value": "JyotsnaSree"}, {"name": "thread", "value": "27332-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.Katalon_login_tests.test_appointment"}]}